name: Deploy Application

on:
  push:
    branches:
      - main # Monitor changes in the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Web Image
        run: |
          docker build -t ${{ secrets.ECR_REPO_URL }}/web:${{ github.sha }} ./web
          docker push ${{ secrets.ECR_REPO_URL }}/web:${{ github.sha }}

      - name: Build and Push API Image
        run: |
          docker build -t ${{ secrets.ECR_REPO_URL }}/api:${{ github.sha }} ./api
          docker push ${{ secrets.ECR_REPO_URL }}/api:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Deploy Helm Chart
        run: |
          helm upgrade --install nonso-app ./helm/nonso-app \
            --set web.image=${{ secrets.ECR_REPO_URL }}/web:${{ github.sha }} \
            --set api.image=${{ secrets.ECR_REPO_URL }}/api:${{ github.sha }} \
            --set api.db.host=${{ secrets.DB_HOST }} \
            --set api.db.user=${{ secrets.DB_USER }} \
            --set api.db.password=${{ secrets.DB_PASSWORD }} \
            --set api.db.name=${{ secrets.DB_NAME }}